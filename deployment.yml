apiVersion: v1
kind: Namespace
metadata:
    name: milesconf
    labels:
        name: milesconf
---
apiVersion: v1
kind: Service
metadata:
  name: milesconf
  namespace: milesconf
spec:
  selector:
    app: milesconf
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: milesconf
  namespace: milesconf
  labels:
    app: milesconf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: milesconf
  template:
    metadata:
      labels:
        app: milesconf
    spec:
      containers:
        - name: milesconf
          image: registry.digitalocean.com/teilin/milesconf:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: milesconf
  namespace: milesconf
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.org/proxy-connect-timeout: "30s"
    nginx.org/proxy-read-timeout: "20s"
    nginx.org/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
  - hosts:
    - milesconf.devgeek.io
    - conf.miles.no
    secretName: milesconf-tls
  rules:
  - host: milesconf.devgeek.io
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: milesconf
            port:
              number: 80
  - host: conf.miles.no
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: milesconf
            port:
              number: 80